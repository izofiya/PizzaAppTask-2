{"version":3,"sources":["Components/buttonLoad.js","Components/pizzaSlicer.js","Components/totalTable.js","index.js"],"names":["ButtonLoad","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","id","className","onClick","React","Component","Pizza","getStyles","bind","assertThisInitialized","index","visitors","skewYValue","transform","_this2","pizzaOrder","type","name","data","map","elem","style","length","dataAll","PizzaSlicer","_React$Component2","_this3","isActivePizzaAndTable","pizzaSlicer_Pizza","TotalTable","count","countPay","countMoneyToCollect","parseFloat","totalOrder","vegans","Math","round","isVegan","priceForOnePerson","disabled","_this2$setState","setState","defineProperty","PizzaApp","isActiveButtonLoad","isLoading","pizzaType","countVegan","countMeat","currency","countVisitorsEat","handleButtonLoadClick","getVisitors","getVegans","getPizzaType","getPriceForOnePerson","getTotalOrder","getCurrencyExchange","visitorsArr","forEach","push","i","words","split","join","fetch","then","response","json","diet","url","arrValue","floor","random","Promise","all","arr","pizzaOrderResponse","currencyResponse","dataArr","price","course","match","USD","_this4","party","eatsPizza","setTimeout","buttonLoad_ButtonLoad","totalTable_TotalTable","pizzaSlicer_PizzaSlicer","rootElement","document","getElementById","ReactDOM","render","src_PizzaApp"],"mappings":"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","file":"static/js/main.63bd1fe0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class ButtonLoad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <button\r\n        id=\"load-btn\"\r\n        className={this.props.className === false ? \"button\" : \"button loading\"}\r\n        onClick={this.props.onClick}\r\n      >\r\n        Load\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass Pizza extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.getStyles = this.getStyles.bind(this);\r\n  }\r\n  getStyles(index, visitors) {\r\n    var degrees = 360 / visitors;\r\n    var countLi = degrees * (index + 1);\r\n    var skewYValue = 0;\r\n    let style = \"\";\r\n    if (visitors > 4 && visitors < 8) {\r\n      skewYValue = -30;\r\n    } else if (visitors > 6 && visitors < 12) {\r\n      skewYValue = -45;\r\n    } else if (visitors > 10) {\r\n      skewYValue = -60;\r\n    }\r\n    style = {\r\n      transform: \"rotate(\" + countLi + \"deg) skewY(\" + skewYValue + \"deg)\"\r\n    };\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        <h5>{\"Pizza type: \" + this.props.pizzaOrder.type}</h5>\r\n        <h5>{\"Pizza name: \" + this.props.pizzaOrder.name}</h5>\r\n        <ul className=\"circle\">\r\n          {this.props.data.map((elem, index) => (\r\n            <li\r\n              key={index}\r\n              style={this.getStyles(index, this.props.data.length)}\r\n              className=\"liCircleClass\"\r\n            >\r\n              <div className=\"text\">{index + 1}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"div1\">\r\n          <h3>\r\n            {\"How many people came to the party: \" + this.props.dataAll.length}\r\n          </h3>\r\n          <div>\r\n            {this.props.dataAll.map((elem, index) => (\r\n              <p key={index}>{elem.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"div2\">\r\n          <h3>{\"How many people eat pizza: \" + this.props.data.length}</h3>\r\n          <div>\r\n            {this.props.data.map((elem, index) => (\r\n              <p key={index}>{elem.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class PizzaSlicer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"divForPizza\">\r\n        {this.props.isActivePizzaAndTable === false ? null : (\r\n          <Pizza\r\n            data={this.props.data}\r\n            dataAll={this.props.dataAll}\r\n            pizzaOrder={this.props.pizzaOrder}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport class TotalTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 1,\r\n      countPay: 0,\r\n      countMoneyToCollect: parseFloat(this.props.totalOrder)\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return this.props.isActivePizzaAndTable ? (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>{\"Name\"}</th>\r\n            <th>{\"Share to pay\"}</th>\r\n            <th>{\"Pay\"}</th>\r\n          </tr>\r\n        </thead>\r\n        <tfoot>\r\n          <tr>\r\n            <td>Total order</td>\r\n            <td>{this.props.totalOrder}</td>\r\n            <td />\r\n          </tr>\r\n          <tr>\r\n            <td>Money to collect</td>\r\n            <td>\r\n              {this.state.count === this.props.vegans.length + 1\r\n                ? 0 + \" BYN\"\r\n                : Math.round(this.state.countMoneyToCollect * 10) / 10  + \" BYN\"}\r\n            </td>\r\n            <td />\r\n          </tr>\r\n          <tr>\r\n            <td>Money collected</td>\r\n            <td>\r\n              {this.state.count - 1 === this.props.vegans.length\r\n                ? parseFloat(this.props.totalOrder) + \" BYN\"\r\n                : Math.round(this.state.countPay * 10) / 10  + \" BYN\"}\r\n            </td>\r\n            <td />\r\n          </tr>\r\n        </tfoot>\r\n        <tbody>\r\n          {this.props.vegans.map((elem, index) => (\r\n            <tr key={index}>\r\n              {elem.isVegan === true ? (\r\n                <td className=\"green\">{elem.name}</td>\r\n              ) : (\r\n                <td>{elem.name}</td>\r\n              )}\r\n              <td>\r\n                {this.state[index] ? \"0 BYN\" : this.props.priceForOnePerson}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"buttonPay\"\r\n                  disabled={!this.state[index] ? false : true}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      count: this.state.count + 1,\r\n                      [index]: !this.state[index],\r\n                      countPay:\r\n                        this.state.countPay +\r\n                        parseFloat(this.props.priceForOnePerson),\r\n                      countMoneyToCollect:\r\n                        parseFloat(this.props.totalOrder) -\r\n                        parseFloat(this.props.priceForOnePerson) *\r\n                          this.state.count\r\n                    });\r\n                  }}\r\n                >\r\n                  {this.state[index] ? \"PAID\" : \"PAY\"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    ) : null;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ButtonLoad } from \"./Components/buttonLoad\";\nimport { PizzaSlicer } from \"./Components/pizzaSlicer\";\nimport { TotalTable } from \"./Components/totalTable\";\nimport \"./css/styles.css\";\nimport \"./css/pizzaSlicer.css\";\n\nexport class PizzaApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataAll: [],\n      isActivePizzaAndTable: false,\n      isActiveButtonLoad: false,\n      isLoading: false,\n      vegans: \"\",\n      pizzaType: \"\",\n      countVegan: 0,\n      countMeat: 0,\n      pizzaOrder: \"\",\n      currency: \"\",\n      countVisitorsEat: 0,\n      priceForOnePerson: 0,\n      totalOrder: 0\n    };\n    this.handleButtonLoadClick = this.handleButtonLoadClick.bind(this);\n    this.getVisitors = this.getVisitors.bind(this);\n    this.getVegans = this.getVegans.bind(this);\n    this.getPizzaType = this.getPizzaType.bind(this);\n    this.getPriceForOnePerson = this.getPriceForOnePerson.bind(this);\n    this.getTotalOrder = this.getTotalOrder.bind(this);\n    this.getCurrencyExchange = this.getCurrencyExchange.bind(this);\n  }\n  getVisitors(data) {\n    let visitorsArr = [];\n    let a = [];\n    data.forEach(function(elem) {\n      visitorsArr.push(elem.name);\n    });\n    for (var i = 0; i < visitorsArr.length; i++) {\n      var words = visitorsArr[i].split(\" \");\n      a.push(words[0] + \"%20\" + words[1]);\n    }\n    return a.join();\n  }\n  getVegans(data) {\n    fetch(\n      \"https://gp-js-test.herokuapp.com/pizza/world-diets-book/\" +\n        this.getVisitors(data)\n    )\n      .then(response => response.json())\n      .then(vegans => {\n        let pizzaType = [];\n        let countVegan = 0;\n        let countMeat = 0;\n        vegans.diet.forEach(elem => {\n          if (elem.isVegan === true) {\n            pizzaType.push(\"vegan\");\n            countVegan += 1;\n          }\n          if (elem.isVegan === false) {\n            pizzaType.push(\"meat\");\n            countMeat += 1;\n          }\n        });\n        this.setState({\n          vegans: vegans.diet,\n          pizzaType: pizzaType,\n          countVegan: countVegan,\n          countMeat: countMeat\n        });\n        this.getPizzaType(countMeat, countVegan, countMeat + countVegan);\n      });\n  }\n  getPizzaType(countMeat, countVegan, countVisitorsEat) {\n    let url = \"https://gp-js-test.herokuapp.com/pizza/order/\";\n    if (countMeat >= countVegan) {\n      url = url + \"meat/\" + countVisitorsEat;\n    }\n    if (countMeat < countVegan) {\n      var arrValue = [\"vegan\", \"cheese\"];\n      var rand = Math.floor(Math.random() * arrValue.length);\n      url = url + arrValue[rand] + \"/\" + countVisitorsEat;\n    }\n    Promise.all([\n      fetch(url),\n      fetch(\"https://gp-js-test.herokuapp.com/pizza/currency\")\n    ]).then(arr => {\n      const pizzaOrderResponse = arr[0];\n      const currencyResponse = arr[1];\n      Promise.all([pizzaOrderResponse.json(), currencyResponse.json()]).then(\n        dataArr => {\n          this.setState({\n            pizzaOrder: dataArr[0],\n            currency: dataArr[1]\n          });\n          this.getPriceForOnePerson(\n            dataArr[0],\n            dataArr[1],\n            this.state.countVisitorsEat\n          );\n          this.getTotalOrder(dataArr[0], dataArr[1], 1);\n        }\n      );\n    });\n  }\n  getCurrencyExchange(price, course, count) {\n    let valueTotalOrder;\n    if (price.price.match(/USD/g)) {\n      valueTotalOrder =\n      Math.round(((parseFloat(price.price) / count) * course.USD) * 10) / 10  + \" BYN\";\n    } else if (price.price.match(/EUR/g)) {\n      valueTotalOrder =\n      Math.round(((parseFloat(price.price) / count) * course.USD) * 10) / 10  + \" BYN\";\n    } else {\n      valueTotalOrder =\n      Math.round(((parseFloat(price.price) / count) * course.USD) * 10) / 10  + \" BYN\";\n    }\n    return valueTotalOrder;\n  }\n  getTotalOrder(price, course, count) {\n    this.setState({\n      totalOrder: this.getCurrencyExchange(price, course, count)\n    });\n  }\n  getPriceForOnePerson(price, course, count) {\n    this.setState({\n      priceForOnePerson: this.getCurrencyExchange(price, course, count)\n    });\n  }\n  handleButtonLoadClick() {\n    fetch(\"https://gp-js-test.herokuapp.com/pizza/guests\")\n      .then(response => response.json())\n      .then(data => {\n        let dataArr = [];\n        let countVisitorsEat = 0;\n        data.party.forEach(elem => {\n          if (elem.eatsPizza === true) {\n            dataArr.push(elem);\n            countVisitorsEat += 1;\n          }\n        });\n        this.setState({\n          data: dataArr,\n          dataAll: data.party,\n          countVisitorsEat: countVisitorsEat,\n          isActiveButtonLoad: true,\n          isLoading: true\n        });\n        this.getVegans(dataArr);\n      });\n\n    setTimeout(() => {\n      this.setState({\n        isActiveButtonLoad: false,\n        isActivePizzaAndTable: true,\n        isLoading: false\n      });\n    }, 3000);\n  }\n\n  render() {\n    return (\n      <div className=\"wrapp\">\n        <ButtonLoad\n          className={this.state.isActiveButtonLoad}\n          onClick={this.handleButtonLoadClick}\n        />\n        {this.state.isLoading ? (\n          <p className=\"pLoading\">loading</p>\n        ) : (\n          <div>\n            <TotalTable\n              vegans={this.state.vegans}\n              isActivePizzaAndTable={this.state.isActivePizzaAndTable}\n              pizzaOrder={this.state.pizzaOrder}\n              priceForOnePerson={this.state.priceForOnePerson}\n              totalOrder={this.state.totalOrder}\n            />\n            <PizzaSlicer\n              data={this.state.data}\n              dataAll={this.state.dataAll}\n              isActivePizzaAndTable={this.state.isActivePizzaAndTable}\n              pizzaOrder={this.state.pizzaOrder}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<PizzaApp />, rootElement);\n"],"sourceRoot":""}